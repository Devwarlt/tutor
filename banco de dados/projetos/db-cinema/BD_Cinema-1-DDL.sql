/*
	Banco: Cinema Completo
	Professor: Wanderson Santos
	Email: professor@wandersonsantos.com
*/

-- Criar o banco de dados
CREATE DATABASE cinema_completo;

-- Selecionar o banco de dados
USE cinema_completo;

-- Criar tabela estabelecimento
CREATE TABLE ESTABELECIMENTO(
	IDESTABELECIMENTO INT  NOT NULL,
	NOMEESTAB VARCHAR(50) NOT NULL,
	ENDESTAB VARCHAR(50) NOT NULL,
	TELESTAB CHAR(20) NULL,
	HORAABERTURA CHAR(5) NULL,
	HORAFECHAMENTO CHAR(5) NULL
);

-- Cria chave primária da tabela estabelecimento
ALTER TABLE ESTABELECIMENTO
	ADD CONSTRAINT PK_ESTABELECIMENTO 
	PRIMARY KEY(IDESTABELECIMENTO);
    
-- Criar tabela dia semana
CREATE TABLE DIASEMANA (
	IDDIASEMANA INT NOT NULL,
	DescDS VARCHAR (20) NOT NULL
);

-- Cria chave primária da tabela DIA SEMANA
ALTER TABLE DIASEMANA
	ADD CONSTRAINT PK_DIASEMANA 
	PRIMARY KEY(IDDIASEMANA);
    
-- Criar tabela horario
CREATE TABLE HORARIO(
	IDHORARIO INT NOT NULL ,
	HORAINICIO VARCHAR(5)
);

-- Cria chave primária da tabela HORARIO
ALTER TABLE HORARIO
	ADD CONSTRAINT PK_HORARIO
	PRIMARY KEY(IDHORARIO);

-- Criar tabela sala
CREATE TABLE SALA (
	IDSALA INT NOT NULL,
	CAPACIDADE INT 
);

-- Cria chave primária da tabela SALA
ALTER TABLE SALA
	ADD CONSTRAINT PK_SALA
	PRIMARY KEY(IDSALA);

-- Cria tabela funcao
CREATE TABLE FUNCAO (
	IDFUNCAO INT NOT NULL,
	DescFUNCAO VARCHAR(20)
);

-- Cria chave primária da tabela FUNCAO
ALTER TABLE FUNCAO
	ADD CONSTRAINT PK_FUNCAO
	PRIMARY KEY(IDFUNCAO);

-- Cria tabela funcionario
CREATE TABLE FUNCIONARIO (
	IDFUNCIONARIO INT NOT NULL,
	FUNCAO_IDFUNCAO INT NOT NULL,
	NOMEFUNC VARCHAR(20)NOT NULL,
	ENDFUNC VARCHAR (50),
	FONE CHAR(10)
);

-- Cria chave primária da tabela FUNCIONARIO
ALTER TABLE FUNCIONARIO
	ADD CONSTRAINT PK_FUNCIONARIO
	PRIMARY KEY(IDFUNCIONARIO);

-- Cria tabela tipo
CREATE TABLE TIPO (
	IDTIPO INT NOT NULL,
	DESCTIPO VARCHAR (20) NULL
);

-- Cria chave primária da tabela FUNCIONARIO
ALTER TABLE TIPO
	ADD CONSTRAINT PK_TIPO
	PRIMARY KEY(IDTIPO);

-- Cria tabela Classificação
CREATE TABLE CLASSIFICACAO (
	IDCLASSIFICACAO INT NOT NULL,
	DescCLASSIFICACAO VARCHAR (20)
);

-- Cria chave primária da tabela FUNCIONARIO
ALTER TABLE CLASSIFICACAO
	ADD CONSTRAINT PK_CLASSIFICACAO
	PRIMARY KEY(IDCLASSIFICACAO);

-- Cria tabela Genero
CREATE TABLE GENERO (
	IDGENERO INT NOT NULL,
	descGENERO VARCHAR(20)
);

-- Cria chave primária da tabela FUNCIONARIO
ALTER TABLE GENERO
	ADD CONSTRAINT PK_GENERO
	PRIMARY KEY(IDGENERO);

-- Cria tabela Filme
CREATE TABLE FILME(
	IDFILME INT NOT NULL,
	GENERO_IDGENERO INT NOT NULL,
	CLASSIFICACAO_IDCLASSIFICACAO INT NOT NULL,
	NOMEFILME VARCHAR (50)NOT NULL ,
	SINOPSE TEXT ,
	TEMPODURACAO INT -- NÚMERO DE MINUTOS 
);

-- Cria chave primária da tabela FILME
ALTER TABLE FILME
	ADD CONSTRAINT PK_FILME
	PRIMARY KEY(IDFILME);

-- Cria tabela Pedido
CREATE TABLE PEDIDO (
	IDPEDIDO INT NOT NULL,
	FUNCIONARIO_IDFUNCIONARIO INT NOT NULL,
	DATAHORA DATETIME,
	VALORTOTAL NUMERIC(5,2) NOT NULL,
	VALORDESC NUMERIC (5,2),
	VALORPAGO NUMERIC (5,2)
);

-- Cria chave primária da tabela FILME
ALTER TABLE PEDIDO
	ADD CONSTRAINT PK_PEDIDO
	PRIMARY KEY(IDPEDIDO);

-- Cria sessao
CREATE TABLE SESSAO (
	IDSESSAO INT NOT NULL,
	TIPO_IDTIPO INT,
	SALA_IDSALA INT,
	FILME_IDFILME INT,
	HORARIO_IDHORARIO INT,
	DIASEMANA_IDDIASEMANA INT,
	ESTABELECIMENTO_IDESTABELECIMENTO INT,
	VALOR NUMERIC(5,2) NOT NULL
); 

-- Alterando os campos que serão Chave Estrangeira para não aceitarem valores vazios(nulos)
ALTER TABLE SESSAO
	MODIFY TIPO_IDTIPO INT NOT NULL;
    
ALTER TABLE SESSAO
	MODIFY SALA_IDSALA INT NOT NULL;
    
ALTER TABLE SESSAO
	MODIFY FILME_IDFILME INT NOT NULL;
    
ALTER TABLE SESSAO
	MODIFY HORARIO_IDHORARIO INT NOT NULL;
    
ALTER TABLE SESSAO
	MODIFY DIASEMANA_IDDIASEMANA INT NOT NULL;
    
ALTER TABLE SESSAO
	MODIFY ESTABELECIMENTO_IDESTABELECIMENTO INT NOT NULL;
    
-- Cria chave primária da tabela SESSAO
ALTER TABLE SESSAO
	ADD CONSTRAINT PK_SESSAO
	PRIMARY KEY(IDSESSAO);

-- Cria tabela Tipo de Desconto
CREATE TABLE TIPODESCONTO (
	IDTIPODESCONTO INT	NOT NULL,
	descTD VARCHAR (30) NOT NULL,
	PERCENTUAL NUMERIC (5,2)
);

-- Cria chave primária da tabela TIPODESCONTO
ALTER TABLE TIPODESCONTO
	ADD CONSTRAINT PK_TIPODESCONTO
	PRIMARY KEY(IDTIPODESCONTO);

-- Cria tabela Ingresso
CREATE TABLE INGRESSO (
	PEDIDO_IDPEDIDO INT NOT NULL,
	SESSAO_IDSESSAO INT NOT NULL,
	TIPODESCONTO_IDTIPODESCONTO INT NOT NULL,
	VALEESTACIONAMENTO BIT NOT NULL
);

-- Cria chave primária COMPOSTA da tabela INGRESSO
ALTER TABLE INGRESSO
	ADD CONSTRAINT PK_INGRESSO
	PRIMARY KEY(PEDIDO_IDPEDIDO, SESSAO_IDSESSAO);

-------------------------------------------------------------------------------------------------------------------
-- Chaves Estrangeiras(FKs)

-- Tabela FILME

-- FK na tabela FILME que fará referência a tabela GENERO
ALTER TABLE FILME
	ADD CONSTRAINT FK_FILME_GENERO
	FOREIGN KEY(GENERO_IDGENERO) -- CAMPO NA TABELA ORIGEM
	REFERENCES GENERO(IDGENERO); -- CAMPO NA TABELA DESTINO


-- FK na tabela FILME que fará referência a tabela CLASSIFICACAO
ALTER TABLE FILME
	ADD CONSTRAINT FK_FILME_CLASSIFICACAO
	FOREIGN KEY(CLASSIFICACAO_IDCLASSIFICACAO) -- CAMPO NA TABELA ORIGEM
	REFERENCES CLASSIFICACAO(IDCLASSIFICACAO); -- CAMPO NA TABELA DESTINO

-- *****************************************************************************************
-- Tabela SESSAO

-- FK na tabela SESSAO que fará referência a tabela TIPO
ALTER TABLE SESSAO
	ADD CONSTRAINT FK_SESSAO_TIPO
	FOREIGN KEY(TIPO_IDTIPO) -- CAMPO NA TABELA ORIGEM
	REFERENCES TIPO(IDTIPO); -- CAMPO NA TABELA DESTINO

-- FK na tabela SESSAO que fará referência a tabela SALA
ALTER TABLE SESSAO
	ADD CONSTRAINT FK_SESSAO_SALA
	FOREIGN KEY(SALA_IDSALA) -- CAMPO NA TABELA ORIGEM
	REFERENCES SALA(IDSALA); -- CAMPO NA TABELA DESTINO

-- FK na tabela SESSAO que fará referência a tabela FILME
ALTER TABLE SESSAO
	ADD CONSTRAINT FK_SESSAO_FILME
	FOREIGN KEY(FILME_IDFILME) -- CAMPO NA TABELA ORIGEM
	REFERENCES FILME(IDFILME); -- CAMPO NA TABELA DESTINO

-- FK na tabela SESSAO que fará referência a tabela HORARIO
ALTER TABLE SESSAO
	ADD CONSTRAINT FK_SESSAO_HORARIO
	FOREIGN KEY(HORARIO_IDHORARIO) -- CAMPO NA TABELA ORIGEM
	REFERENCES HORARIO(IDHORARIO); -- CAMPO NA TABELA DESTINO

-- FK na tabela SESSAO que fará referência a tabela DIASEMANA
ALTER TABLE SESSAO
	ADD CONSTRAINT FK_SESSAO_DIASEMANA
	FOREIGN KEY(DIASEMANA_IDDIASEMANA) -- CAMPO NA TABELA ORIGEM
	REFERENCES DIASEMANA(IDDIASEMANA); -- CAMPO NA TABELA DESTINO

-- FK na tabela SESSAO que fará referência a tabela ESTABELECIMENTO
ALTER TABLE SESSAO
	ADD CONSTRAINT FK_SESSAO_ESTABELECIMENTO
	FOREIGN KEY(ESTABELECIMENTO_IDESTABELECIMENTO) -- CAMPO NA TABELA ORIGEM
	REFERENCES ESTABELECIMENTO(IDESTABELECIMENTO); -- CAMPO NA TABELA DESTINO

-- *****************************************************************************************
-- Tabela INGRESSO

-- FK na tabela INGRESSO que fará referência a tabela TIPODESCONTO
ALTER TABLE INGRESSO
	ADD CONSTRAINT FK_INGRESSO_TIPODESCONTO
	FOREIGN KEY(TIPODESCONTO_IDTIPODESCONTO) -- CAMPO NA TABELA ORIGEM
	REFERENCES TIPODESCONTO(IDTIPODESCONTO); -- CAMPO NA TABELA DESTINO


-- *****************************************************************************************
-- Tabela FUNCIONARIO

-- FK na tabela FUNCIONARIO que fará referência a tabela FUNCAO
ALTER TABLE FUNCIONARIO
	ADD CONSTRAINT FK_FUNCIONARIO_FUNCAO
	FOREIGN KEY(FUNCAO_IDFUNCAO) -- CAMPO NA TABELA ORIGEM
	REFERENCES FUNCAO(IDFUNCAO); -- CAMPO NA TABELA DESTINO


-- *****************************************************************************************
-- Tabela PEDIDO

-- FK na tabela PEDIDO que fará referência a tabela FUNCIONARIO
ALTER TABLE PEDIDO
	ADD CONSTRAINT FK_PEDIDO_FUNCIONARIO
	FOREIGN KEY(FUNCIONARIO_IDFUNCIONARIO) -- CAMPO NA TABELA ORIGEM
	REFERENCES FUNCIONARIO(IDFUNCIONARIO); -- CAMPO NA TABELA DESTINO

-- *****************************************************************************************
-- Tabela INGRESSO

-- FK na tabela INGRESSO que fará referência a tabela PEDIDO
ALTER TABLE INGRESSO
	ADD CONSTRAINT FK_INGRESSO_PEDIDO
	FOREIGN KEY(PEDIDO_IDPEDIDO) -- CAMPO NA TABELA ORIGEM
	REFERENCES PEDIDO(IDPEDIDO); -- CAMPO NA TABELA DESTINO

-- FK na tabela INGRESSO que fará referência a tabela SESSAO
ALTER TABLE INGRESSO
	ADD CONSTRAINT FK_INGRESSO_SESSAO
	FOREIGN KEY(SESSAO_IDSESSAO) -- CAMPO NA TABELA ORIGEM
	REFERENCES SESSAO(IDSESSAO); -- CAMPO NA TABELA DESTINO

