{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green128\blue0;\red209\green209\blue209;\red0\green0\blue0;\red255\green0\blue0;\red0\green0\blue255;}
{\info{\comment Generated by the SynEdit RTF exporter}
{\title exe1.rtf}}

\deflang1033\pard\plain\f0\fs20 \cf0 #include "stdio.h"
\par #include "stdlib.h"
\par #include "stdbool.h"
\par #include "dynamic_stack.h"
\par #include "locale.h"
\par 
\par \cf1\i /*
\par 	[Estrutura de Dados - Exercício]
\par 	
\par 	Nádio Dib - 201918579
\par 	Engenharia de Software
\par */
\par 
\par /*
\par 	Escreva uma função que receba como parâmetro duas pilhas e verifique se elas são iguais.
\par 	Duas pilhas são iguais se possuem os mesmos elementos, na mesma ordem.
\par */
\par 
\par \i0\cf2\b bool\b0  IsEqual\cf3\b (\b0\cf2 Stack \cf3\b *\b0\cf2 stack1\cf3\b ,\b0\cf2  Stack \cf3\b *\b0\cf2 stack2\cf3\b )\b0\cf2  \cf3\b \{
\par \b0\cf2 	\b char\b0  tempVal1 \cf3\b =\b0\cf2  '.'\cf3\b ,\b0\cf2  tempVal2 \cf3\b =\b0\cf2  '.'\cf3\b ;
\par \b0\cf2 	\b bool\b0  isEqual \cf3\b =\b0\cf2  \b false\cf3 ;
\par \b0\cf2 	
\par 	\b while\b0  \cf3\b (\b0\cf2 tempVal1 \cf3\b !=\b0\cf2  '.' \cf3\b &&\b0\cf2  tempVal2 \cf3\b !=\b0\cf2  '.'\cf3\b )\b0\cf2  \cf3\b \{
\par \b0\cf2 		tempVal1 \cf3\b =\b0\cf2  Pop\cf3\b (\b0\cf2 stack1\cf3\b ,\b0\cf2  \cf4\b "1"\cf3 );
\par \b0\cf2 		tempVal2 \cf3\b =\b0\cf2  Pop\cf3\b (\b0\cf2 stack2\cf3\b ,\b0\cf2  \cf4\b "2"\cf3 );
\par \b0\cf2 		isEqual \cf3\b =\b0\cf2  tempVal1 \cf3\b &&\b0\cf2  tempVal2\cf3\b ;
\par \b0\cf2 		
\par 		\b if\b0  \cf3\b (!\b0\cf2 isEqual\cf3\b )
\par \b0\cf2 			\b break\cf3 ;
\par \b0\cf2 	\cf3\b \}
\par \b0\cf2 	
\par 	\b return\b0  isEqual\cf3\b ;
\par \}
\par 
\par \cf2 int\b0  main\cf3\b ()\b0\cf2  \cf3\b \{
\par \b0\cf2 	setlocale\cf3\b (\b0\cf2 LC_ALL\cf3\b ,\b0\cf2  \cf4\b "Portuguese"\cf3 );
\par \b0\cf2 	
\par 	Stack stack1\cf3\b ,\b0\cf2  stack2\cf3\b ;
\par \b0\cf2 	
\par 	Init\cf3\b (&\b0\cf2 stack1\cf3\b );
\par \b0\cf2 	Init\cf3\b (&\b0\cf2 stack2\cf3\b );
\par \b0\cf2 	
\par 	AutoPush\cf3\b (&\b0\cf2 stack1\cf3\b ,\b0\cf2  \cf4\b "1"\cf3 );
\par \b0\cf2 	AutoPush\cf3\b (&\b0\cf2 stack2\cf3\b ,\b0\cf2  \cf4\b "2"\cf3 );
\par \b0\cf2 	
\par 	printf\cf3\b (\cf4 "As pilhas são iguais? %s"\cf3 ,\b0\cf2  IsEqual\cf3\b (&\b0\cf2 stack1\cf3\b ,\b0\cf2  \cf3\b &\b0\cf2 stack2\cf3\b )\b0\cf2  \cf3\b ==\b0\cf2  \b true\b0  \cf3\b ?\b0\cf2  \cf4\b "\\nSim, as pilhas são iguais."\b0\cf2  \cf3\b :\b0\cf2  \cf4\b "\\nNão, as pilhas são diferentes."\cf3 );
\par \}
\par }